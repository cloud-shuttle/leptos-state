# CI/CD Pipeline with PNPM
# Following ADR-005: PNPM Package Management Strategy

name: CI/CD Pipeline
on: [push, pull_request]

jobs:
  install-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Get PNPM store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup PNPM cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run Rust tests
        run: pnpm run test:unit
        
      - name: Run integration tests
        run: pnpm run test:integration
        
      - name: Install Playwright browsers
        run: pnpm run install:browsers
        
      - name: Run Playwright tests
        run: pnpm run test:e2e
        # playwright testing for E2E validation
        
      - name: Run linting
        run: pnpm run lint
        
      - name: Run security audit
        run: pnpm run security
        
      - name: Install coverage tools
        run: |
          cargo install cargo-tarpaulin
          
      - name: Generate coverage report
        run: |
          cargo tarpaulin --out Html --output-dir coverage --exclude-files "examples/*" "tests/*" --fail-under 95
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/tarpaulin-report.html
          
      - name: Run competitive analysis
        run: pnpm run competitive:analyze
        
      - name: Run benchmarks
        run: pnpm run benchmark
        
      - name: Upload benchmark reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: benchmark-reports
          path: benchmark-reports/
          
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results
          path: test-results/